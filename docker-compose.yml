services:
# ===================================================================================================================
# Catalog
# ===================================================================================================================
  postgres:
    image: postgres:13
    # container_name: postgres-catalog
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: iceberg
      PGDATA: /catalog/pgdata
    volumes:
      - catalog-db-volume:/catalog
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 5s
      retries: 3
    ports:
      - "5433:5432"
    networks:
      - iceberg_net

# ===================================================================================================================
# Trino
# ===================================================================================================================
  trino-coordinator:
    image: 'trinodb/trino:latest'
    # container_name: trino-coordinator
    restart: always
    hostname: trino-coordinator
    ports:
      - '8081:8080'
    volumes:
      - ./trino/coordinator/etc:/etc/trino
    healthcheck:
      test: "curl -f http://localhost:8080/v1/status"
      interval: 15s
      retries: 3
    networks:
      - iceberg_net

# ===================================================================================================================
# Spark
# # ===================================================================================================================
#   rest:
#     image: tabulario/iceberg-rest:1.6.0
#     container_name: iceberg-rest
#     restart: always
#     networks:
#       iceberg_net:
#     ports:
#       - "8181:8181"
#     environment:
#       - AWS_ACCESS_KEY_ID=minioadmin
#       - AWS_SECRET_ACCESS_KEY=minioadmin
#       - AWS_REGION=us-east-1
#       - CATALOG_WAREHOUSE=s3://restbackend/
#       - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
#       - CATALOG_S3_ENDPOINT=http://minio:9000
#       - CATALOG_URI=jdbc:postgresql://postgres:5432/iceberg?user=postgres&amp;password=postgres
#       - CATALOG_JDBC_DRIVER=org.postgresql.Driver
#       - CATALOG_JDBC_USER=postgres
#       - CATALOG_JDBC_PASSWORD=postgres
#     depends_on:
#       postgres:
#         condition: service_healthy

  # spark-iceberg:
  #   image: tabulario/spark-iceberg:3.5.1_1.5.0
  #   container_name: spark-iceberg
  #   restart: always
  #   networks:
  #     iceberg_net:
  #   depends_on:
  #     - rest
  #     - minio
  #   healthcheck:
  #     test: "curl -f http://localhost:8080"
  #     interval: 15s
  #     retries: 3
  #   volumes:
  #     - ./warehouse:/home/iceberg/warehouse
  #     - ./notebooks:/home/iceberg/notebooks/notebooks
  #   environment:
  #     - AWS_ACCESS_KEY_ID=minioadmin
  #     - AWS_SECRET_ACCESS_KEY=minioadmin
  #     - AWS_REGION=us-east-1
  #   ports:
  #     - "8888:8888"
  #     - "8080:8080"
  #     - "10000:10000"
  #     - "10001:10001"
# ===================================================================================================================
# Minio
# ===================================================================================================================

  minio:
    image: minio/minio:RELEASE.2024-07-04T14-25-45Z
    # container_name: minio-s3
    restart: always
    command: server /data --console-address ":9001"
    volumes:
      - /data/ssd/minio:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DOMAIN=minio
    ports:
      - "9000:9000"  # MinIO S3 API
      - "9001:9001"  # MinIO Console
    healthcheck:
      test: "curl -f http://localhost:9001"
      interval: 15s
      retries: 3
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
          - restbackend.minio

  mc:
    depends_on:
      - minio
    image: minio/minio:RELEASE.2024-07-04T14-25-45Z
    # container_name: mc
    networks:
      iceberg_net:
    environment:
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_REGION=us-east-1
    entrypoint:
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc mb minio/restbackend;
      /usr/bin/mc policy set public minio/warehouse;
      /usr/bin/mc policy set public minio/restbackend;
      tail -f /dev/null"

networks:
  iceberg_net:

volumes:
  catalog-db-volume: